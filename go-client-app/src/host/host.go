// Generated by `wit-bindgen` 0.16.0. DO NOT EDIT!
package host

// #include "host.h"
import "C"
import "unsafe"
// Import functions from levo:portal/my-imports
func LevoPortalMyImportsPrint(msg string) {
  var lower_msg C.host_string_t
  
  // use unsafe.Pointer to avoid copy
  lower_msg.ptr = (*uint8)(unsafe.Pointer(C.CString(msg)))
  lower_msg.len = C.size_t(len(msg))
  C.levo_portal_my_imports_print(&lower_msg )
}

func LevoPortalMyImportsFillStyle(color string) {
  var lower_color C.host_string_t
  
  // use unsafe.Pointer to avoid copy
  lower_color.ptr = (*uint8)(unsafe.Pointer(C.CString(color)))
  lower_color.len = C.size_t(len(color))
  C.levo_portal_my_imports_fill_style(&lower_color )
}

func LevoPortalMyImportsFillRect(x float32, y float32, width float32, height float32) {
  lower_x := C.float(x)
  lower_y := C.float(y)
  lower_width := C.float(width)
  lower_height := C.float(height)
  C.levo_portal_my_imports_fill_rect(lower_x , lower_y , lower_width , lower_height )
}

func LevoPortalMyImportsBeginPath() {
  C.levo_portal_my_imports_begin_path()
}

func LevoPortalMyImportsMoveTo(x float32, y float32) {
  lower_x := C.float(x)
  lower_y := C.float(y)
  C.levo_portal_my_imports_move_to(lower_x , lower_y )
}

func LevoPortalMyImportsCubicBezierTo(x1 float32, y1 float32, x2 float32, y2 float32, x3 float32, y3 float32) {
  lower_x1 := C.float(x1)
  lower_y1 := C.float(y1)
  lower_x2 := C.float(x2)
  lower_y2 := C.float(y2)
  lower_x3 := C.float(x3)
  lower_y3 := C.float(y3)
  C.levo_portal_my_imports_cubic_bezier_to(lower_x1 , lower_y1 , lower_x2 , lower_y2 , lower_x3 , lower_y3 )
}

func LevoPortalMyImportsArc(x float32, y float32, radius float32, sweep_angle float32, x_rotation float32) {
  lower_x := C.float(x)
  lower_y := C.float(y)
  lower_radius := C.float(radius)
  lower_sweep_angle := C.float(sweep_angle)
  lower_x_rotation := C.float(x_rotation)
  C.levo_portal_my_imports_arc(lower_x , lower_y , lower_radius , lower_sweep_angle , lower_x_rotation )
}

func LevoPortalMyImportsClosePath() {
  C.levo_portal_my_imports_close_path()
}

func LevoPortalMyImportsFill() {
  C.levo_portal_my_imports_fill()
}

func LevoPortalMyImportsLabel(text string, x float32, y float32, size float32, color string) {
  var lower_text C.host_string_t
  
  // use unsafe.Pointer to avoid copy
  lower_text.ptr = (*uint8)(unsafe.Pointer(C.CString(text)))
  lower_text.len = C.size_t(len(text))
  lower_x := C.float(x)
  lower_y := C.float(y)
  lower_size := C.float(size)
  var lower_color C.host_string_t
  
  // use unsafe.Pointer to avoid copy
  lower_color.ptr = (*uint8)(unsafe.Pointer(C.CString(color)))
  lower_color.len = C.size_t(len(color))
  C.levo_portal_my_imports_label(&lower_text , lower_x , lower_y , lower_size , &lower_color )
}

func LevoPortalMyImportsDeltaSeconds() float32 {
  ret := C.levo_portal_my_imports_delta_seconds()
  var lift_ret float32
  lift_ret = float32(ret)
  return lift_ret
}

// Export functions from host
var host Host = nil
// `SetHost` sets the `Host` interface implementation.
// This function will need to be called by the init() function from the guest application.
// It is expected to pass a guest implementation of the `Host` interface.
func SetHost(i Host) {
  host = i
}
type Host interface {
  Update() 
  Setup() 
}
//export host_update
func hostUpdate() {
  host.Update()
  
}
//export host_setup
func hostSetup() {
  host.Setup()
  
}
